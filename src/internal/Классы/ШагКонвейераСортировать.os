#Использовать lambdas
#Использовать asserts

Перем Действие;
Перем ПолеСортировки;

Функция Принять(Коллекция) Экспорт

	Результат = Коллекция;

	Для й = 0 По Результат.ВГраница() Цикл
		Флаг = Ложь;
		к = Результат.ВГраница();
		Пока к > й Цикл

			Элемент = Результат[к - 1];
			СледующийЭлемент = Результат[к];
			
			Если ПустаяСтрока(ПолеСортировки) Тогда
				РезультатСортировки = Действие.Выполнить(Элемент, СледующийЭлемент);
			Иначе
				РезультатСортировки = Действие.Выполнить(Элемент[ПолеСортировки], СледующийЭлемент[ПолеСортировки]);
			КонецЕсли;

			Если РезультатСортировки > 0 Тогда
				Результат[к - 1] = СледующийЭлемент;
				Результат[к] = Элемент;
				Флаг = Истина;
			КонецЕсли;
			к = к - 1;
		КонецЦикла;
		Если НЕ Флаг Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат Новый Структура("Действие, Коллекция", ДействияКонвейера.ЗаменитьКоллекцию, Результат);

КонецФункции

Функция Барьерный() Экспорт
	Возврат Истина;
КонецФункции

Процедура Деструктор() Экспорт
	
	ОсвободитьОбъект(Действие);

	Действие = Неопределено;

КонецПроцедуры

Процедура Инвертировать() Экспорт
	
	Если Действие = ПроцессорыКоллекций.СтандартнаяФункцияСравненияПрямойПорядок() Тогда
		Действие = ПроцессорыКоллекций.СтандартнаяФункцияСравненияОбратныйПорядок();
	Иначе

		Действие = Лямбда.Выражение("Первый, Второй -> Возврат -Действие.Выполнить(Первый, Второй)")
			.Контекст(Новый Структура("Действие", Действие))
			.ВДействие();

	КонецЕсли;

КонецПроцедуры

Процедура ПриСозданииОбъекта(ФункцияРазворачивания, ДополнительныеПараметры, Отладка, Поле = "")

	Если ФункцияРазворачивания = Неопределено Тогда
		Действие = ПроцессорыКоллекций.СтандартнаяФункцияСравненияПрямойПорядок();
	Иначе

		Действие = ПроцессорыКоллекцийСлужебный.ДействиеИзПараметров(
			ФункцияРазворачивания,
			ФункциональныеИнтерфейсы.БиФункция(),
			ДополнительныеПараметры,
			Отладка
		);

	КонецЕсли;

	ПолеСортировки = Поле;

КонецПроцедуры
